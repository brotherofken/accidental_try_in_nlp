# -*- coding: utf-8 -*-
"""
Created on Mon Aug  8 21:10:38 2016

@author: rakhunzy
"""

# In[]
import time
import numpy as np
import scipy as sp
import sklearn as skl
from sklearn import metrics
from sklearn.cluster import MiniBatchKMeans, KMeans, DBSCAN
from sklearn.externals import joblib

import matplotlib.pyplot as plt

import pickle

# In[]
def load_vocab(path='', sfx='',vec_sfx=''):
    vocab_file = path + 'vocab' + sfx + '.txt'
    vectors_file = path + 'vectors' + sfx + vec_sfx + '.txt'

    with open(vocab_file, 'r') as f:
        words = [x.rstrip().split(' ')[0] for x in f.readlines()]
    with open(vectors_file, 'r') as f:
        vectors = {}
        for line in f:
            vals = line.rstrip().split(' ')
            vectors[vals[0]] = [float(x) for x in vals[1:]]

    vocab_size = len(words)
    vocab = {w: idx for idx, w in enumerate(words)}
    ivocab = {idx: w for idx, w in enumerate(words)}

    vector_dim = len(vectors[ivocab[0]])
    W = np.zeros((vocab_size, vector_dim))
    for word, v in vectors.items():
        if word == '<unk>':
            continue
        W[vocab[word], :] = v

    # normalize each word vector to unit variance
    W_norm = np.zeros(W.shape)
    d = (np.sum(W ** 2.0, 1) ** (0.5))
    W_norm = (W.T / d).T
    return (W_norm, vocab, ivocab)
    
# In[]
data_sfx = '_morethan10_wodgt_filter_ru'
#data_sfx = '_lemma_morethan10_wodgt_filter_ru'
W_norm, vocab, ivocab = load_vocab(path='../lib/GloVe/',
                                   sfx=data_sfx,
                                   vec_sfx='_50_10_5')
                                   
# In[]

def norm_vec(vec):
    vec_norm = np.zeros(vec.shape)
    d = (np.sum(vec ** 2,) ** (0.5))
    vec_norm = (vec.T / d).T
    return vec_norm

def mean_vector(W, vocab, ivocab, input_tokens):
    for idx, term in enumerate(set(input_tokens)):
        if term in vocab:
            #print('Word: %s  Position in vocabulary: %i' % (term, vocab[term]))
            if idx == 0:
                vec_result = np.array(W[vocab[term], :])
            else:
                vec_result += W[vocab[term], :] 
        else:
            if idx == 0:
                vec_result = np.zeros(W[0, :].shape)
            else:
                vec_result += np.zeros(W[0, :].shape)
    return norm_vec(vec_result)                                   
                                   
def distance(W, vocab, ivocab, input_tokens):
    N = 10
    
    vec_norm = mean_vector(W, vocab, ivocab, input_tokens)

    dist = np.dot(W, vec_norm.T)

    for term in input_tokens:
        if term in vocab:
            index = vocab[term]
            dist[index] = -np.Inf

    a = np.argsort(-dist)[:N]

    print("\n                               Word       Cosine distance")
    print("---------------------------------------------------------")
    for x in a:
        print("%35s\t\t%f" % (ivocab[x], dist[x]))

                
def distance2(W, vocab, ivocab, input_tokens_a, input_tokens_b=None, vec_b=None):
    norm_vec_a = mean_vector(W, vocab, ivocab, input_tokens_a)    

    if not vec_b is None:
        norm_vec_b = vec_b
    else:
        norm_vec_b = mean_vector(W, vocab, ivocab, input_tokens_b)

    dist = np.dot(norm_vec_a, norm_vec_b.T)
    return dist

# In[]
tokens = 'сообщение'.split(' ')
distance(W_norm, vocab, ivocab, tokens)

# In[]


tokens_filter = 'друзьям друг друзей тоже всем отправь разошли всем своим которым которые прислать пришлют это мне написать ответ сообщение передай перешли получишь отошли тебя тебе тем вернется отошлешь если то ты цепь'.split(' ')
#tokens_filter = 'поздравляю тебя вас день отмечать отмечает днем днём поздравления праздником праздничком прошедшим желаю чтоб чтобы'.split(' ')
#tokens_filter = 'поздравляю праздник старый новый год'
#tokens_filter = 'привет дела как твои поживаешь делишки приветик приветики привеет'.split(' ')
#distance(W_norm, vocab, ivocab, tokens)

sentences = ['oso sso разошли всем своим друзьям и мне не забудь если вернётся у тебя нету хороших друзей у тебя нету на кого положится ты популярный',
'перешли это сообщение всем от кого хочешьузнать что с тобой хотят сделать и не забудь мне написать ответ переехать катком задушить побить подушкой обнять поцеловать в щеку поцеловать в губы увидить голой ым заняться сексом принять вместе душ увидить отомстить полюбить стать друзьями погулять побухать сходить в кино дать пощечину встречаться нах ты мне укусить нежно поболтать по телефону узнать получше сходить на дискатеку жить вместе',
'отправь эту улыбочку всем друзьям которым ты хочешь улыбнуть не забуть прислать и мне если тебе пришлют у тебя есть очень мало хороших друзей ти хороший друг тебя все любят если ты отошлешь это своим друзьям то у тебя вся стена будит в улыбочках',
'приветик самая милая симпатичная красивая хорошенькая обаятельная очаровательная привлекательная изящная яркая эффектная шикарная безупречная совершенная идеальная непревзойденная замечательная удивительная восхитительная неповторимая единственная бесценная обворожительная соблазнительная сладкая обольстительная ослепительная ты просто супер а теперь в знак дружбы и уважения отошли всем своим подружкам это сообщение и не забудь прислать мне если тебе прийдет шт ты не относишься к этому списку шт тебя очень ценят шт ты просто звезда приятно читать прислали мне я улыбнулась вот хочу чтоб ты улыбнулась тоже',
'любовная история это не прикол даже тем кто не в сети со дня после того как ты прочитаешь это послание при условии что цепь не будет прервана ты можешь даже не верить в это это работает как огромная пирамида мыслей людей твоя личная жизнь изменится к лучшему ты найдёшь действительно достойного человека в течении ближайших часов и ты увидишь что произойдёт через дня увидишь даже если ты не суеверен послушай это правда если ты пошлёшь это письмо людям то завтра вас ожидает удачный день если ты пошлёшь письмо или больше то в течении минут вам позвонит человек к которому вы не равнодушны вот тока не ругайся через дня тебе кто то признается в любви тот кто по настоящему любит тебя если ты прервёшь цепь то ты будишь всегда неудачлив а тот человек полюбит другого итак посылай это сообщение людям как минимум',
'была девушка у нее был парень она невероятно сильно его любила и он её тоже но она заболела и легла в больницу у нее было больное сердце и что бы выжить нужна была пересадка она ничего не хотела говорить любимому что бы он не волновался каждый день она мечтала увидеть его почувствовать его запах дотронуться до его губ слышать его голос ей сделали операцию и она вышла из больницы первым делом она стала звонить своему любимому но он не отвечал когда она подошла к холодильнику то прочитала я всегда буду рядом ведь внутри тебя бьется мое сердце отправь это друзьям оч романтичная история и пусть у тя будет человек ради которого ты сможешь это сделать перед тем как читать дальше загадай парня девушку загадал а читай дальше отправь это своим друзьям и мне тоже если вернется не будет между вами не чего дружба роман любовь',
'сегодня день вячеслава девушки гадают погадаем отправь мне мужское имя на стену а текст перешли всем девчонкам которые сейчас на сайте седьмое имя того кто безумно тебя любит',
'солнышко обнимаю тебя и дарю тебе сертификат обнимания подари его всем людям которых тебе хочеться обнять и тому кто обнял тебя только попробуй не верни мне если тебе пришлют этот сертификат обратно раз проснись тебе надо искать новых друзей раза неплохое начало раза ты хороший друг раза ты многим нравишься раз тебя оберегают ангелы',
'a',
'июля в студия вкуса клубника оз банное представляет grand presentation special guest john steel casa project event после ошеломительного успеха на гастролях мая на вечеринке art night руководство студии вкуса клубника сделало эксклюзивное предложение john steel стать ди джей резидентом клуба и он с благодарностью принял сделанное ему предложение и вот июля года в он вновь появиться в стенах клубники на презентации его в качестве ди джей резидента и презентации диска с его эксклюзивным миксом специально для студии вкуса клубника который может получить в подарок каждый кто придёт на вечеринку grand presentation для вас играют john steel casa project johnnystyle promodj alice shine ilya start strong afterparty с ым пришедшим диск в подарок',
'и тебепривет чего света морозимтся я ей вчера звонила звонила зайди к ней сегодня',
'спасибо всё хорошо вот дома сижу погода херне так бы гулять пошёл в субботу опять к нам поедете',
'a',
'дружище поздравляю тебя с этим прекрасным днём вот и свершилось настоящее счастье ещё раз мои поздравления',
'вы молодцы сейчас это очень сложная вещь поздравляю вас не теряйте друг друга',
'a',
'здравствуй старый новый год мы тебя так ждали знали праздник к нам придет ели выпивали выпьем не в последний раз под опавшей ёлкой за родителей за нас чтоб всё было с толком чтоб у нас здоровье было никогда не подводило чтобы двигались вперед в этот новый старый год',
'вот и кончились гулянки кутерьма загул и пьянки больше нету недосыпа больше морда не разбита кожуры нет на ушах руки ноги не в бинтах чистота порядок в доме нет бутылок на балконе нет в салатах фейерверка вновь прикручены все дверки нет на люстре колбасы не разбросаны трусы даже кот после веселья перестал болеть с похмелья выйду снова на работу окунусь в свои заботы черт забыла аж снова в пот седня старый новый год поздравляю',
'пьёт народ ровно неделю отмечает новый год и у каждого второго в шоке печень и живот выпито уже не мало водки пива коньяка и конечно регулярно по утрам трещит башка вам желаю поднапрячься стойко рождество встречать и со старым новым годом тоже блин не подкачать',
'a',
]

tokens_filter_mean_vec = mean_vector(W_norm, vocab, ivocab, tokens_filter)

for sentence in sentences:
    vec2vec_distance = distance2(W_norm, vocab, ivocab, sentence.split(' '), vec_b = tokens_filter_mean_vec)
    print(vec2vec_distance)

# In[]


tokens_filter = 'переслать пересылать сообщение весь ns это написать от если отправить кто ответ что вернуться вернутся'.split(' ')

sentences = [
'удивить ответ устроить день чесносость переслать это сообщение весь от кто хочеш узнать что с ты хотеть сделать и не забыть я написать ответ переехать каткий задушить побить подушка обнять поцеловать в щека поцеловать в губа увидить голый ым заниться секс принять вместе душа увидеть ласка полюбить стать друг по гулять по бухать сходить в кино дать пощочен встречаться заниться танец изнасиловать встретиться для секс пнуть под дых занимиться секс целовать ночь облить ледяной вода заставить разсться погладить посидеть на берег река ночью целоваться под луна забросать грязь хотеть бы умереть за он побывать на семь небо перепихнуться и разбёжиться засос в губа засос в шея серьёзный отношение изнасиловать ты очень нежно изнасиловать ты очень жёстко погулять под луна завести ребёнок просто отдохнуть съездить на мор чтобы мы всегда быть ряд погулять под луна создать брак переехать на квартира отдельный снимать позитивный эмоция',
'прочитать до конец лично у я весь сойтись занять всего секунда но не читать результат пока не сделать подсчёт ок начать выбрать день неделя в который ты хотеться влюбиться pondelnik vtornik voskresenie умножить это число на к результат добавить умножить на если в это год у ты уже быть день рождение добавить если нет добавить последний шаг из результат который у ты получиться вычесть год твой рождение у ты должный получиться сумма из цифра итак один из цифра должный обозначать день неделя в который ты хотеться бы влюбиться правильно но это не весь последний цифра обозначать твой возраст правильно этот математический мозаика работать только в это год отправить свой друг сразу же что то хороший случиться с ты сегодня в быть готовый к важный событие в твой жизнь если ты удалить это письмо не переслать он никто быть ты несчастие на последующий год а если отправить в течение минута хотя бы послушать это правда если вы послать это письмо человек то завтра вы ожидать удачный день если вы послать это письмо или большой то в течение минута вы позвонить ваш любовь',
'жизнь короткий нарушать правило прощать быстро целоваться медленно любить искренне смеяться безудержно и никогда не жалеть о тот что заставить ты улыбнуться отправить весь кто ты любить и ценить весь хороший человек и пофига сколько вернуться главный то что ты замечательный человек и я ты это пересылать',
'нарисовать у я на стена сердце чёрный я для ты враг белый просто друг подруга зелёный я для ты самый ая хороший ая подруга друг розовый я ты нравиться красный ты я любить отправить это свой друг и узнать как кто к ты относиться',
'a',
'если бы о диана сидоров написать в газета о что быть бы статья о тот что она поймать преступник сбежать с тюрьма',
'привет если ты ище не добавить а себя это приложение тогда поторопиться там конкурс место голос место голос место голос место голос место голос место голос место голос место голос место голос место голос весь реально это не спам и не развод спасибо за внимание',
'ты я в краска вогнать спасибо большой хоть кто то оценить заинтересовать и что же интересный можно из это всего сделать ну так если они есть тогда давать делиться они не сидеть один умный'
]

for sentence in sentences:
    vec2vec_distance = distance2(W_norm, vocab, ivocab, tokens_filter, sentence.split(' '))
    print(vec2vec_distance)


# In[]

tokens_filter = 'друзьям друг друзей тоже всем отправь разошли всем своим которым которые прислать пришлют это мне написать ответ сообщение передай перешли получишь отошли тебя тебе тем вернется отошлешь если то ты цепь'.split(' ')
tokens_filter_mean_vec = mean_vector(W_norm, vocab, ivocab, tokens_filter)

dataset_file = 'tokens' + data_sfx + '.txt'
i = 0

distances = []

fo = open('chains.txt','w')

with open(dataset_file, 'r') as fi:
    for string in fi:
        string = string.rstrip('\n')
                
        if len(string) > 0:
            tokens = string.split(' ')
            
            vec2vec_distance = distance2(W_norm, vocab, ivocab, tokens, vec_b = tokens_filter_mean_vec)
#            print(vec2vec_distance)            
            distances.append(vec2vec_distance)
            if vec2vec_distance > 0.8:
                print(' '.join(tokens), file=fo)
  
        i += 1
        
        if i % 100000 == 0:
            print("Reading %d" % i)
fo.close()
distances = np.array(distances)

# In[]
plt.hist(distances, bins=100, range=(0.6, 1.0), log=True)

np.count_nonzero(distances > 0.8)